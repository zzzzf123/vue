{"remainingRequest":"C:\\Users\\admin\\Desktop\\shopping\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\admin\\Desktop\\shopping\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\admin\\Desktop\\shopping\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\admin\\Desktop\\shopping\\node_modules\\vue-awesome\\components\\Icon.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\admin\\Desktop\\shopping\\node_modules\\vue-awesome\\components\\Icon.vue","mtime":499162500000},{"path":"C:\\Users\\admin\\Desktop\\shopping\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\admin\\Desktop\\shopping\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\admin\\Desktop\\shopping\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\admin\\Desktop\\shopping\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Icon.vue"],"names":[],"mappings":"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","sourcesContent":["<script>\nlet icons = {}\n\nfunction warn (msg, vm) {\n  if (!vm) {\n    /* eslint-disable no-console */\n    console.error(msg)\n    /* eslint-enable no-console */\n    return\n  }\n  vm.constructor.super.util.warn(msg, vm)\n}\n\nexport default {\n  name: 'fa-icon',\n  props: {\n    name: {\n      type: String,\n      validator (val) {\n        if (val && !(val in icons)) {\n          warn(\n            `Invalid prop: prop \"name\" is referring to an unregistered icon \"${val}\".\\n` +\n              `Please make sure you have imported this icon before using it.`,\n            this\n          )\n          return false\n        }\n        return true\n      }\n    },\n    title: String,\n    scale: [Number, String],\n    spin: Boolean,\n    inverse: Boolean,\n    pulse: Boolean,\n    flip: {\n      validator (val) {\n        return val === 'horizontal' || val === 'vertical' || val === 'both'\n      }\n    },\n    label: String,\n    tabindex: [Number, String]\n  },\n  data () {\n    return {\n      x: false,\n      y: false,\n      childrenWidth: 0,\n      childrenHeight: 0,\n      outerScale: 1\n    }\n  },\n  computed: {\n    normalizedScale () {\n      let scale = this.scale\n      scale = typeof scale === 'undefined' ? 1 : Number(scale)\n      if (isNaN(scale) || scale <= 0) {\n        warn(`Invalid prop: prop \"scale\" should be a number over 0.`, this)\n        return this.outerScale\n      }\n      return scale * this.outerScale\n    },\n    klass () {\n      let classes = {\n        'fa-icon': true,\n        'fa-spin': this.spin,\n        'fa-flip-horizontal': this.flip === 'horizontal',\n        'fa-flip-vertical': this.flip === 'vertical',\n        'fa-flip-both': this.flip === 'both',\n        'fa-inverse': this.inverse,\n        'fa-pulse': this.pulse\n      }\n\n      if (this.classes) {\n        Object.keys(this.classes).forEach(c => {\n          if (this.classes[c]) {\n            classes[c] = true\n          }\n        })\n      }\n\n      return classes\n    },\n    icon () {\n      if (this.name) {\n        return icons[this.name]\n      }\n      return null\n    },\n    box () {\n      if (this.icon) {\n        return `0 0 ${this.icon.width} ${this.icon.height}`\n      }\n      return `0 0 ${this.width} ${this.height}`\n    },\n    ratio () {\n      if (!this.icon) {\n        return 1\n      }\n      let { width, height } = this.icon\n      return Math.max(width, height) / 16\n    },\n    width () {\n      return (\n        this.childrenWidth ||\n        (this.icon && (this.icon.width / this.ratio) * this.normalizedScale) ||\n        0\n      )\n    },\n    height () {\n      return (\n        this.childrenHeight ||\n        (this.icon && (this.icon.height / this.ratio) * this.normalizedScale) ||\n        0\n      )\n    },\n    style () {\n      if (this.normalizedScale === 1) {\n        return false\n      }\n      return {\n        fontSize: this.normalizedScale + 'em'\n      }\n    },\n    raw () {\n      // generate unique id for each icon's SVG element with ID\n      if (!this.icon || !this.icon.raw) {\n        return null\n      }\n      let raw = this.icon.raw\n      let ids = {}\n      raw = raw.replace(\n        /\\s(?:xml:)?id=([\"']?)([^\"')\\s]+)\\1/g,\n        (match, quote, id) => {\n          let uniqueId = getId('vat-')\n          ids[id] = uniqueId\n          return ` id=\"${uniqueId}\"`\n        }\n      )\n      raw = raw.replace(\n        /#(?:([^'\")\\s]+)|xpointer\\(id\\((['\"]?)([^')]+)\\2\\)\\))/g,\n        (match, rawId, _, pointerId) => {\n          let id = rawId || pointerId\n          if (!id || !ids[id]) {\n            return match\n          }\n\n          return `#${ids[id]}`\n        }\n      )\n\n      return raw\n    },\n    focusable () {\n      let { tabindex } = this\n      if (tabindex == null) {\n        return 'false'\n      }\n      let index =\n        typeof tabindex === 'string' ? parseInt(tabindex, 10) : tabindex\n      if (index >= 0) {\n        return null\n      }\n      return 'false'\n    }\n  },\n  mounted () {\n    this.updateStack()\n  },\n  updated () {\n    this.updateStack()\n  },\n  methods: {\n    updateStack () {\n      if (!this.name && this.name !== null && this.$children.length === 0) {\n        warn(`Invalid prop: prop \"name\" is required.`, this)\n        return\n      }\n\n      if (this.icon) {\n        return\n      }\n\n      let width = 0\n      let height = 0\n      this.$children.forEach(child => {\n        child.outerScale = this.normalizedScale\n\n        width = Math.max(width, child.width)\n        height = Math.max(height, child.height)\n      })\n      this.childrenWidth = width\n      this.childrenHeight = height\n      this.$children.forEach(child => {\n        child.x = (width - child.width) / 2\n        child.y = (height - child.height) / 2\n      })\n    }\n  },\n  render (h) {\n    if (this.name === null) {\n      return h()\n    }\n\n    let options = {\n      class: this.klass,\n      style: this.style,\n      attrs: {\n        role: this.$attrs.role || (this.label || this.title ? 'img' : null),\n        'aria-label': this.label || null,\n        'aria-hidden': !(this.label || this.title),\n        tabindex: this.tabindex,\n        x: this.x,\n        y: this.y,\n        width: this.width,\n        height: this.height,\n        viewBox: this.box,\n        focusable: this.focusable\n      },\n      on: this.$listeners\n    }\n\n    if (this.raw) {\n      let html = `<g>${this.raw}</g>`\n\n      if (this.title) {\n        html = `<title>${escapeHTML(this.title)}</title>${html}`\n      }\n\n      options.domProps = { innerHTML: html }\n    }\n\n    let content = this.title ? [h('title', this.title)] : []\n\n    return h(\n      'svg',\n      options,\n      this.raw\n        ? null\n        : content.concat([\n          h(\n            'g',\n            this.$slots.default ||\n                (this.icon\n                  ? [\n                    ...this.icon.paths.map((path, i) =>\n                      h('path', {\n                        attrs: path,\n                        key: `path-${i}`\n                      })\n                    ),\n                    ...this.icon.polygons.map((polygon, i) =>\n                      h('polygon', {\n                        attrs: polygon,\n                        key: `polygon-${i}`\n                      })\n                    )\n                  ]\n                  : [])\n          )\n        ])\n    )\n  },\n  register (data) {\n    for (let name in data) {\n      let icon = data[name]\n      let { paths = [], d, polygons = [], points } = icon\n\n      if (d) {\n        paths.push({ d })\n      }\n\n      if (points) {\n        polygons.push({ points })\n      }\n\n      icons[name] = assign({}, icon, {\n        paths,\n        polygons\n      })\n    }\n  },\n  icons\n}\n\nfunction hasOwn (obj, key) {\n  return Object.prototype.hasOwnProperty.call(obj, key)\n}\n\nfunction assign (obj, ...sources) {\n  sources.forEach(source => {\n    for (let key in source) {\n      if (hasOwn(source, key)) {\n        obj[key] = source[key]\n      }\n    }\n  })\n\n  return obj\n}\n\nlet count = 0\nfunction getId (prefix = '') {\n  return prefix + count++\n}\n\nconst ESCAPE_MAP = {\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  '&': '&amp;'\n}\n\nfunction escapeHTML (html) {\n  return html.replace(/[<>\"&]/g, c => ESCAPE_MAP[c] || c)\n}\n</script>\n\n<style>\n.fa-icon {\n  display: inline-block;\n  fill: currentColor;\n  overflow: visible;\n  vertical-align: -0.125em;\n}\n\n.fa-icon > g {\n  transform-origin: 50% 50%;\n}\n\n.fa-flip-horizontal {\n  transform: scale(-1, 1);\n}\n\n.fa-flip-vertical {\n  transform: scale(1, -1);\n}\n\n.fa-flip-both {\n  transform: scale(-1, -1);\n}\n\n.fa-spin > g {\n  animation: fa-spin 1s 0s infinite linear;\n}\n\n.fa-pulse > g {\n  animation: fa-spin 1s infinite steps(8);\n}\n\n.fa-inverse {\n  color: #fff;\n}\n\n@keyframes fa-spin {\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n}\n</style>\n"],"sourceRoot":"node_modules/vue-awesome/components"}]}